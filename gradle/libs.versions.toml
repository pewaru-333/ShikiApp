[versions]
apolloRuntime = "4.0.0"
appcompat = "1.7.0"
coilCompose = "2.7.0"
composeBom = "2024.09.00"
composeDestinations = "2.1.0-beta11"
composePreferences = "1.1.1"
converterMoshi = "2.11.0"
googleKsp = "2.0.0-1.0.24"
gradle = "8.6.0"
jetbrainsKotlin = "2.0.0"
kotlinBom = "2.0.10"
lifecycleRuntimeKtx = "2.8.5"
material3 = "1.3.0"
moshiKotlin = "1.15.1"
okhttpBom = "4.12.0"
pagingCompose = "3.3.2"
retrofit = "2.11.0"

[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
apollo-runtime = { module = "com.apollographql.apollo:apollo-runtime", version.ref = "apolloRuntime" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
compose-destinations = { module = "io.github.raamcosta.compose-destinations:core", version.ref = "composeDestinations" }
compose-destinations-ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "composeDestinations" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "converterMoshi" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlinBom" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshiKotlin" }
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttpBom" }
preference-library = { module = "me.zhanghai.compose.preference:library", version.ref = "composePreferences" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "gradle" }
apolloGraphQL = { id = "com.apollographql.apollo", version.ref = "apolloRuntime" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "jetbrainsKotlin" }
googleKsp = { id = "com.google.devtools.ksp", version.ref = "googleKsp" }
jetbrainsKotlin = { id = "org.jetbrains.kotlin.android", version.ref = "jetbrainsKotlin" }