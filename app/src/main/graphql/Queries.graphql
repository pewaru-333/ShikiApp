# ============================================= Anime =============================================

query AnimeList(
    $page: PositiveInt!,
    $limit: PositiveInt!,
    $order: OrderEnum,
    $kind: AnimeKindString,
    $status: AnimeStatusString,
    $season: SeasonString,
    $score: Int,
    $duration: DurationString,
    $rating: RatingString,
    $genre: String,
    $studio: String,
    # $franchise: String,
    # $censored: Boolean,
    # $mylist: MylistString,
    $search: String
) {
    animes(
        page: $page,
        limit: $limit,
        order: $order,
        kind: $kind,
        status: $status,
        season: $season,
        score: $score,
        duration: $duration,
        rating: $rating,
        genre: $genre,
        censored: false,
        studio: $studio,
        search: $search
    ) {
        ...AnimeContent
        airedOn {
            date
        }
    }
}

query AnimeAiring($season: SeasonString) {
    animes(kind: "tv", status: "ongoing", season: $season, order: popularity, limit: 12) {
        ...AnimeBasic
    }
}

query AnimeMain($id: String!) {
    animes(ids: $id) {
        ...AnimeContent
        airedOn {
            date
        }
        descriptionHtml
        duration
        episodes
        episodesAired
        externalLinks {
            ...Link
        }
        fandubbers
        fansubbers
        franchise
        genres {
            ...Genres
        }
        licenseNameRu
        licensors
        nextEpisodeAt
        origin
        rating
        releasedOn {
            date
        }
        screenshots {
            originalUrl
        }
        studios {
            id
            name
            imageUrl
        }
        userRate {
            ...UserRateFragment
        }
        videos {
            url
            name
            kind
            imageUrl
        }
    }
}

query AnimeExtra($id: String!) {
    animes(ids: $id) {
        characterRoles {
            ...CharacterRole
        }
        chronology {
            ...AnimeContent
            airedOn {
                date
            }
            rating
            releasedOn {
                date
            }
        }
        personRoles {
            ...PersonRole
        }
        related {
            ...RelatedFragment
        }
        scoresStats {
            ...Scores
        }
        statusesStats {
            ...Stats
        }
    }
}

query AnimeTopic($id: String!) {
    animes(ids: $id) {
        topic {
            id
        }
    }
}

query AnimeGenres {
    genres(entryType: Anime) {
        ...Genres
    }
}

# ============================================= Manga =============================================

query MangaList(
    $page: PositiveInt!,
    $limit: PositiveInt!,
    $order: OrderEnum,
    $kind: MangaKindString,
    $status: MangaStatusString,
    $season: SeasonString,
    $score: Int,
    $genre: String,
    $publisher: String,
    # $franchise: String,
    # $censored: Boolean,
    # $mylist: MylistString,
    $search: String
) {
    mangas(
        page: $page,
        limit: $limit,
        order: $order,
        kind: $kind,
        status: $status,
        season: $season,
        score: $score,
        genre: $genre,
        publisher: $publisher,
        search: $search
    ) {
        ...MangaContent
        airedOn {
            date
        }
    }
}

query MangaMain($id: String!) {
    mangas(ids: $id) {
        ...MangaContent
        airedOn {
            date
        }
        chapters
        descriptionHtml
        externalLinks {
            ...Link
        }
        franchise
        genres {
            ...Genres
        }
        licenseNameRu
        licensors
        publishers {
            id
            name
        }
        releasedOn {
            date
        }
        userRate {
            ...UserRateFragment
        }
        volumes
    }
}

query MangaExtra($id: String!) {
    mangas(ids: $id) {
        characterRoles {
            ...CharacterRole
        }
        chronology {
            ...MangaContent
            airedOn {
                date
            }
            releasedOn {
                date
            }
        }
        personRoles {
            ...PersonRole
        }
        related {
            ...RelatedFragment
        }
        scoresStats {
            ...Scores
        }
        statusesStats {
            ...Stats
        }
    }
}

query MangaTopic($id: String!) {
    mangas(ids: $id) {
        topic {
            id
        }
    }
}

query MangaGenres {
    genres(entryType: Manga) {
        ...Genres
    }
}

# =========================================== Character ===========================================

query CharacterList($page: PositiveInt, $limit: PositiveInt, $search: String) {
    characters(page: $page, limit: $limit, search: $search) {
        ...CharacterBasic
    }
}

query Character($id: [ID!]) {
    characters(ids: $id) {
        poster {
            originalUrl
        }
    }
}

query CharacterTopic($id: [ID!]) {
    characters(ids: $id) {
        topic {
            id
        }
    }
}

# ============================================ People =============================================

query People(
    $page: PositiveInt,
    $limit: PositiveInt,
    $search: String,
    $isSeyu: Boolean,
    $isProducer: Boolean,
    $isMangaka: Boolean
) {
    people(
        page: $page,
        limit: $limit,
        search: $search,
        isSeyu: $isSeyu,
        isProducer: $isProducer,
        isMangaka: $isMangaka
    ) {
        ...PersonBasic
    }
}

# ============================================= Users ==============================================

query Users(
    $page: PositiveInt,
    $limit: PositiveInt,
    $search: String
) {
    users(
        page: $page,
        limit: $limit,
        search: $search
    ) {
        id
        nickname
        avatarUrl
    }
}

# ========================================== User rates ============================================

query UserRates(
    $userId: ID,
    $page: PositiveInt,
    $limit: PositiveInt,
    $targetType: UserRateTargetTypeEnum,
    $status: UserRateStatusEnum
    $order: UserRateOrderInputType
) {
    userRates(
        userId: $userId,
        page: $page,
        limit: $limit,
        targetType: $targetType,
        status: $status,
        order: $order
    ) {
        ...UserRateFragment
        createdAt
        updatedAt
        anime {
            ...AnimeContent
            episodes
        }
        manga {
            ...MangaContent
            chapters
        }
    }
}

# =========================================== Fragments ============================================

fragment AnimeBasic on Anime {
    id
    name
    russian
    poster {
        originalUrl
        mainUrl
    }
}

fragment AnimeContent on Anime {
    ...AnimeBasic
    kind
    season
    status
    score
}

fragment MangaBasic on Manga {
    id
    name
    russian
    poster {
        originalUrl
        mainUrl
    }
}

fragment MangaContent on Manga {
    ...MangaBasic
    kind
    status
    score
}

fragment CharacterBasic on Character {
    id
    name
    russian
    poster {
        originalUrl
        mainUrl
    }
}

fragment CharacterRole on CharacterRole {
    rolesRu
    character {
        ...CharacterBasic
    }
}

fragment PersonBasic on Person {
    id
    name
    russian
    poster {
        originalUrl
        mainUrl
    }
}

fragment PersonRole on PersonRole {
    rolesRu
    person {
        ...PersonBasic
    }
}

fragment RelatedFragment on Related {
    anime {
        ...AnimeContent
        airedOn {
            date
        }
    }
    manga {
        ...MangaContent
        airedOn {
            date
        }
    }
    relationText
}

fragment Genres on Genre {
    id
    russian
}

fragment Scores on ScoreStat {
    score
    count
}

fragment Stats on StatusStat {
    status
    count
}

fragment Link on ExternalLink {
    kind
    url
}

fragment UserRateFragment on UserRate {
    id
    status
    chapters
    episodes
    volumes
    score
    rewatches
    text
}